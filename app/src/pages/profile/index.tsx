import { useState } from 'react'
import { GetServerSideProps } from 'next'
import Head from 'next/head'
import { parseCookies } from 'nookies'
import { useForm } from 'react-hook-form'

import { getApiClient } from 'services/axios'
import { Form, Input } from 'assets/styles/form'
import { Button } from 'assets/styles/buttons'
// Types
import { UserProps } from 'contexts/Auth/AuthContext.d'
import { Wrapper } from './styles'
import { editUser } from 'services/user'
import { Alert } from 'assets/styles/alert'

type ProfileProps = {
  user: UserProps
}

const Profile = ({ user }: ProfileProps) => {
  const { register, handleSubmit } = useForm()
  const [alert, setAlert] = useState<{msg: string, type?: string} | null>()

  const handleEditUser = async (data): Promise<void> => {
    const { error, msg } = await editUser(data)
    console.log(msg)
    if (error) {
      setAlert({ msg: error, type: 'danger' })
      return
    }
    setAlert({ msg, type: '' })
  }

  return (
    <div>
      <Head>
        <title>Partytime | Edite o seu usuario</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Wrapper className='container'>
        <h1>Edite a sua conta</h1>
        <h2>Preencha o formulário para se editar a sua conta!</h2>
        <Form maxWidth={700} onSubmit={handleSubmit(handleEditUser)}>
            <div>
              <label>Nome</label>
              <Input
                {...register('id')}
                type='hidden'
                value={user?._id}
              />
              <Input
                {...register('name')}
                placeholder='Coloque seu nome'
                name='name'
                id='name'
                required
                defaultValue={user?.name}
              />
            </div>
            <div>
              <label>Email</label>
              <Input
                {...register('email')}
                placeholder='Coloque seu email'
                type='email'
                name='email'
                id='email'
                defaultValue={user?.email}
                required
              />
            </div>
            <div>
              <label>Senha</label>
              <Input
                {...register('password')}
                type='password'
                placeholder='Coloque sua senha'
                name='password'
                id='password'
                required
              />
            </div>
            <div>
              <label>Confirme sua senha</label>
              <Input
                {...register('confirmPassword')}
                type='password'
                placeholder='Confirme sua senha'
                name='confirmPassword'
                id='confirmPassword'
                required
              />
            </div>
            <Button className='mt-5'>Salvar mudanças</Button>
        </Form>
        {alert ? <Alert type={alert?.type}>{alert?.msg}</Alert> : null}
      </Wrapper>
    </div>
  )
}

export default Profile

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  const { 'auth-token': token } = parseCookies(ctx)

  const apiClient = getApiClient(ctx)

  if (!token) {
    return {
      redirect: {
        destination: '/',
        permanent: false
      }
    }
  }
  const response = await apiClient.get('api/user')
  const user: UserProps = response.data.user

  return {
    props: {
      user
    }
  }
}
